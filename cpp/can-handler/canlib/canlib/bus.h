/**
 * This class definition is very minimal. It only provides the methods
 * which are necessary for its relation with the Base class.
 * Most of the functionality is autogenerated - see the VehBus class example.
 */

#pragma once

#include "base.h"
#include "msg.h"

namespace can {

class Base;

class Bus {
   public:
    Bus(Base& can_base);

    /**
     * Send a message. Use `.encode()` on a message to get a RawMessage.
     */
    void Send(RawMessage msg);

   private:
    Base& can_base_;

    /**
     * Given a RawMessage, decode it based on its ID and store in this
     * bus.
     */
    virtual void AddMessage(const RawMessage& msg) = 0;
    friend class Base;
};

}  // namespace can